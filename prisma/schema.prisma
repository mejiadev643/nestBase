
generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model User {
  id    Int    @id @default(autoincrement())
  email String @unique
  userName  String
  passwordHash String
  roleId Int
  isActive Boolean @default(true)
  lastLogin DateTime? @default(now())
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  role Role @relation(fields: [roleId], references: [id])
  Tasks Tasks[]
  Subtasks Subtasks[]
  Projects Projects[]
}


model Role {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  User User[]
}



model Task_estatuses {
  id        Int      @id @default(autoincrement())
  statusName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Tasks Tasks[]
  Subtasks Subtasks[]
}



model Projects {
  id        Int      @id @default(autoincrement())
  name     String
  description String
  userId Int
  deletedAt DateTime?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Tasks Tasks[]
  User User @relation(fields: [userId], references: [id])
}



model Priorities {
  id        Int      @id @default(autoincrement())
  priorityName String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  Tasks Tasks[]
  Subtasks Subtasks[]
}



model Tasks {
  id             Int       @id @default(autoincrement())
  userId         Int
  projectId      Int
  taskStatusId   Int
  priorityId     Int
  taskName       String
  taskDescription String?
  taskStartDate  DateTime? 
  taskEndDate    DateTime?
  taskComments   String?
  deletedAt      DateTime?
  createdAt      DateTime  @default(now())
  updatedAt      DateTime  @updatedAt
  User           User      @relation(fields: [userId], references: [id])
  Projects       Projects  @relation(fields: [projectId], references: [id])
  TaskStatus     Task_estatuses @relation(fields: [taskStatusId], references: [id])
  Priorities     Priorities @relation(fields: [priorityId], references: [id])
  subtasks       Subtasks[]
}

model Subtasks {
  id           Int            @id @default(autoincrement())
  taskId       Int
  subtaskName  String
  isCompleted  Boolean        @default(false)
  assignedTo   Int
  description  String
  priorityId   Int
  TaskStatusId Int
  createdAt    DateTime       @default(now())
  updatedAt    DateTime       @updatedAt
  deletedAt    DateTime?
  Tasks        Tasks          @relation(fields: [taskId], references: [id])
  Priorities   Priorities     @relation(fields: [priorityId], references: [id])
  TaskStatus   Task_estatuses @relation(fields: [TaskStatusId], references: [id])
  User         User           @relation(fields: [assignedTo], references: [id])
}
